---
const navLinks: {
  label: string;
  href: string;
  matcher: RegExp;
}[] = [
  {
    label: "Home",
    href: "/",
    matcher: /^\/$/,
  },
  {
    label: "Articles",
    href: "/articles",
    matcher: /^\/articles(?:\/.*)?$/,
  },

  {
    label: "Projects",
    href: "/projects",
    matcher: /^\/projects(?:\/.*)?$/,
  },

  {
    label: "Email",
    href: "mailto:alfie.jones@hotmail.co.uk",
    matcher: /contact$/,
  },
];
---

<div class="fixed top-4 z-50 inset-x-0 flex items-center justify-center">
  <nav
    class="flex rounded-full bg-white/90 pr-3 text-sm font-medium text-zinc-800 ring-1 shadow-lg shadow-zinc-800/5 ring-zinc-900/5 backdrop-blur-sm dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10"
  >
    <p
      class="bg-zinc-50 border-zinc-200 border-r dark:border-zinc-700 dark:bg-zinc-900 font-semibold rounded-l-full pl-3 flex items-center justify-center px-3"
    >
      Alfie Jones
    </p>

    <ul class="flex">
      {
        navLinks.map(({ label, href, matcher }) => (
          <li>
            <a
              data-current={Astro.url.pathname.match(matcher)}
              href={href}
              class="relative block px-3 py-2 transition hover:text-teal-500 dark:hover:text-teal-400 data-[current]:text-teal-500 dark:data-[current]:text-teal-400"
            >
              {label}

              {Astro.url.pathname.match(matcher) && (
                <span class="absolute inset-x-1 -bottom-px h-px bg-linear-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0" />
              )}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</div>
